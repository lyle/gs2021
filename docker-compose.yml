version: "2.4"

services:
  db:
    image: postgis/postgis:13-3.1
    user: postgres
    environment:
      POSTGRES_PASSWORD: demo
    volumes:
      - ./docker/pgdata:/var/lib/postgresql/data
      - ./docker/local-db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  dbadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: 'pgadmin4@pgadmin.org'
      PGADMIN_DEFAULT_PASSWORD: 'demo'
    volumes:
      - ./docker/pgadmin/pgadmin4.json:/pgadmin4/servers.json
      - ./docker/pgadmin/pgadmin4.py:/pgadmin4/config_local.py
      - $HOME/.pgpass:/pgadmin4/pgpass
    ports:
      - "80"
    depends_on:
      db:
        condition: service_healthy

  dbmigration:
    build:
      context: ./docker
      dockerfile: Dockerfile.dbmigration
    volumes:
      - $HOME/.pgpass:/home/.pgpass
      - ./database/main:/repo
    depends_on:
      db:
        condition: service_healthy

  graphql:
    build: ./graphql
    environment:
      DB_URL: 'postgres://geekspeak_api:demo@db/geekspeak'
      DB_ADMIN_URL: 'postgres://postgres:demo@db/geekspeak'
    volumes:
      - ./graphql/lib:/app/lib
    ports:
      - "3000"
    depends_on:
      - dbmigration
    command: "npm run start:dev"

  ui-public:
    build:
      context: ./ui/public
      dockerfile: Dockerfile.dev
    environment:
      HOST: 0.0.0.0
    volumes:
      - ./ui/public/src:/app/src
      - ./ui/public/static:/app/static
    ports:
      - "15000:15000"
      - "8080:3000"
    depends_on:
      - graphql
    command: npm run dev -- --host=0.0.0.0

  ui-admin:
    build:
      context: ./ui/admin
      dockerfile: Dockerfile.dev
    environment:
      HOST: 0.0.0.0
    volumes:
      - ./ui/admin/src:/app/src
      - ./ui/admin/static:/app/static
    ports:
      - "15001:15001"
      - "8081:3000"
    depends_on:
      - graphql
    command: npm run dev -- --host=0.0.0.0
